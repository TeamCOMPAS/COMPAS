name: COMPAS compile test

on: [pull_request]

jobs:
  compas:
    name: Build COMPAS
    # runs-on: ubuntu-18.04
    runs-on: ${{ matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        include: 
          - os: ubuntu-20.04
            container: centos7
            experimental: true

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt install texlive-latex-extra cm-super dvipng
          sudo apt update && sudo apt install g++ libboost-all-dev libgsl-dev libhdf5-serial-dev 

      - name: Install dependencies on centos docker
        if: startsWith(matrix.container, 'centos')
        run: |
          echo "I'm on CentOS 7"
          
      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          export PATH="/usr/local/opt/python/libexec/bin:$PATH"
          brew --version
          brew install gsl
          brew install boost
          brew install hdf5
          brew install mactex
          eval "$(/usr/libexec/path_helper)"
          export PATH="/usr/local/texlive:/Library/TeX/texbin:$PATH"
          echo $PATH
          pdflatex --version
          brew install ghostscript
          sudo tlmgr update --self
          sudo tlmgr install texliveonfly
          sudo tlmgr install adjustbox
          sudo tlmgr install tcolorbox
          sudo tlmgr install collectbox
          sudo tlmgr install ucs
          sudo tlmgr install environ
          sudo tlmgr install trimspaces
          sudo tlmgr install titling
          sudo tlmgr install enumitem
          sudo tlmgr install rsfs
          # brew install libmagic
          sudo tlmgr install dvipng
          
          # sudo tlmgr install pdflatex
          eval "$(/usr/libexec/path_helper)"


      - name: Build Compas
        run: |
          cd src && make -j $(nproc) -f Makefile
          ./COMPAS -v
        env:
          nproc: 4

      # - name: Install Python and required packages on Ubuntu
      #   if: startsWith(matrix.os, 'ubuntu')
      #   run: |
      #     # sudo apt-get install python3.8 python3.8-dev python3.8-distutils python3.8-venv
      #     # python3.8 -m venv dev3.8
      #     # source dev3.8/bin/activate
      #     sudo apt-get install gcc libpq-dev -y
      #     # sudo apt-get install python-dev  python-pip -y
      #     sudo apt-get install python3-dev python3-pip python3-venv python3-wheel -y
      #     pip3 install --upgrade setuptools
      #     pip3 install wheel
      #     pip3 install -r requirements.txt

      - name: Install Python and required packages on MacOS
        if: startsWith(matrix.os, 'macos')
        run: |
          # /usr/bin/xcodebuild -version
          # sudo port -v selfupdate
          # curl -O https://github.com/macports/macports-base/releases/download/v2.7.2/MacPorts-2.7.2-11-BigSur.pkg
          # pwd
          # sudo installer -pkg ${GITHUB_WORKSPACE}/MacPorts-2.7.2-11-BigSur.pkg -target CurrentUserHomeDirectory
          
          # curl -O https://distfiles.macports.org/MacPorts/MacPorts-2.7.2.tar.bz2
          # tar xf MacPorts-2.7.2.tar.bz2
          # cd MacPorts-2.7.2/
          # ./configure
          # make
          # sudo make install

          # export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
          # port version
          # port install python36
          # sudo port select --set python3 python36
          # port install py36-pip
          # select --set pip36
          # pip3 install -r requirements.txt

          # pip3 install -r requirements.txt
          python3 -m pip install -r requirements.txt
          # python3 --version
          # which python3
          # python --version
          # which python

      
      - name: Run Post-Processing Python Scripts
        # if: startsWith(matrix.os, 'ubuntu')
        run: |
          export COMPAS_ROOT_DIR=${GITHUB_WORKSPACE}
          cd utils/example_plots/methods_paper_plots/detailed_evolution
          python3 runSubmitDemo.py
          python3 plot_detailed_evolution.py

      - name: Finish Job
        run: echo 'All done and dusted'